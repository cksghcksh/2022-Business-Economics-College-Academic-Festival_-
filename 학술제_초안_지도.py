# -*- coding: utf-8 -*-
"""학술제_초안_지도.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1abKErmNJvP3T2SZx2_uIxv694Q6zbLIz
"""

pip install --upgrade xlrd

import pandas as pd
report = pd.read_excel('Report.xls')

report = report [['기간','자치구','동','합계']]

report.drop(report.loc[report['동']=='동'].index, inplace=True)
report.drop(report.loc[report['동']=='합계'].index, inplace=True)
report.drop(report.loc[report['동']=='소계'].index, inplace=True)

report.to_csv('./reportData.csv')

#report.plot.barh(x='동', y='합계', rot=0,figsize=(15,0))

pal = pd.read_excel("location.xlsx")

pal = pal[pal.시도 =='서울특별시']

pal = pal[['코드','시군구','읍면동','위도','경도']]

pal = pal.rename(columns={'읍면동':'동'})

pal['동']=pal['동'].str.strip("제")

pal.head(20)

pal = pal.replace('창신제1동','창신1동')
pal = pal.replace('창신제2동','창신2동')
pal = pal.replace('창신제3동','창신3동')
pal = pal.replace('숭인제1동','숭인1동')
pal = pal.replace('숭인제2동','숭인2동')

pal = pal.apply(lambda x: x.str.strip("제"), axis = 1)

pal['동'].replace('제', '', inplace=True)

pal.head(20)

report.tail(20)

data = pd.merge(pal, report, on="동")

data

import requests
import json

# 서울 행정구역 json raw파일(githubcontent)
r = requests.get('https://raw.githubusercontent.com/southkorea/seoul-maps/master/kostat/2013/json/seoul_municipalities_geo_simple.json')
c = r.content
seoul_geo = json.loads(c)

geo_data = 'TL_SCCO_SIG.json'

from folium.plugins import MarkerCluster

import folium

m = folium.Map(
    location=[37.559819, 126.963895],
    zoom_start=12, 
    tiles='cartodbpositron'
) 

folium.GeoJson(
    seoul_geo,
    name='지역동'
).add_to(m)

marker_cluster = MarkerCluster().add_to(m)

for lat, long in zip(data['위도'], data['경도']):
    folium.Marker([lat, long], icon = folium.Icon(color="green")).add_to(marker_cluster)

m

geo_data = 'TL_SCCO_SIG.json'

geo_data

bins = list(data['합계'].quantile([0, 0.25, 0.5, 0.75, 1]))

m = folium.Map(
    location=[37.559819, 126.963895],
    zoom_start=11, 
    tiles='cartodbpositron'
)

folium.GeoJson(
    geo_data,
    name='지역구'
).add_to(m)

m.choropleth(geo_data=seoul_geo,
             data=data, 
             fill_color='YlOrRd', # 색상 변경도 가능하다
             fill_opacity=0.5,
             line_opacity=0.2,
             key_on='properties.name',
             legend_name="지역구별 커피 업종 수", 
             #bins=bins
            )
m

m = folium.Map(
    location=[37.559819, 126.963895],
    zoom_start=11, 
    tiles='cartodbpositron'
)

folium.GeoJson(
    seoul_geo,
    name='지역구'
).add_to(m)

m.choropleth(geo_data=seoul_geo,
             data=data, 
             fill_color='YlOrRd', # 색상 변경도 가능하다
             fill_opacity=0.5,
             line_opacity=0.2,
             key_on='properties.name',
             legend_name="합계"
            )
m

center = [37.541, 126.986]

# 맵이 center 에 위치하고, zoom 레벨은 11로 시작하는 맵 m을 만듭니다.
m = folium.Map(location=center, zoom_start=10)

# Choropleth 레이어를 만들고, 맵 m에 추가합니다.
folium.Choropleth(
    geo_data=geo_data,
    data=data,
    columns=('동', '합계'),
    key_on='동',
    fill_color='BuPu',
    legend_name='지역별 거주자 수',
).add_to(m)

# 맵 m을 출력합니다.
m

def multipolygon_to_coordinates(x):
  lon,lat=x[0].exterior.xy
  return [[x,y] for x,y in zip(lon,at)]

pip install geopandas

import geopandas as gpd
import pydeck as pdk

